@model ToDoPhoneBook.Contracts.Models.ToDoItemsListDto

@{
    ViewData["Title"] = "Index";
}

@await Html.PartialAsync("_Error")

<a asp-action="Create">Добавить запись</a>

<br />
<br />
<label for="SearchStartDate">Поиск по дате начала события:</label>
<input type="date" id="SearchStartDate" name="SearchStartDate">
<button id="SearchStartDateButton">Поиск по дате начала</button>
<br />
<br />

<label for="SearchEndDate">Поиск по дате начала события:</label>
<input type="date" id="SearchEndDate" name="SearchEndDate">
<button id="SearchEndDateButton">Поиск по дате окончания</button>
<br />
<br />
<label>Фильтрация по временному промежутку</label>
<div class="periodSort">
    <button id="SearchDay" type="button" class="btn btn-default filter TimePeriod">День</button>
    <button id="SearchWeek" type="button" class="btn btn-default filter TimePeriod">Неделя</button>
    <button id="SearchMonth" type="button" class="btn btn-default filter TimePeriod">Месяц</button>
    <button id="SearchFull" type="button" class="btn btn-default filter TimePeriod active-button">Весь период</button>
</div>

<label>Фильтрация по типу события</label>
<div>
    <button id="Meeting" type="button" class="btn btn-default filter Type">Встреча</button>
    <button id="Business" type="button" class="btn btn-default filter Type">Дело</button>
    <button id="Memo" type="button" class="btn btn-default filter Type">Памятка</button>
    <button id="AllTypes" type="button" class="btn btn-default filter Type active-button">Все события</button>
</div>

<div>
    <button id="ResetFilters" type="button" class="btn btn-default">Сбросить все фильтры</button>
</div>

<table id="grid-data-api" class="table table-condensed table-hover table-striped">
    <thead>
        <tr>
            <th data-column-id="itemType">Тип события</th>
            <th data-column-id="title" data-sortable="false">Тема</th>
            <th data-column-id="startDateString" data-sortable="true">Дата начала</th>
            <th data-column-id="endDateString" data-sortable="true">Дата окончания</th>
            <th data-column-id="place" data-sortable="false">Место</th>
            <th data-column-id="commands" data-formatter="commands" data-sortable="false">Действия</th>
        </tr>
    </thead>
</table>

<label id="TimePeriod" hidden>4</label>
<label id="Type" hidden>4</label>


<script type="text/javascript">

    $("#SearchStartDateButton").on("click", function () {
        debugger;
        if ($("#SearchStartDate").val()) {
            $("#SearchStartDate").addClass("search");
            grid.bootgrid("reload");
            $("#SearchStartDate").removeClass("search");
            document.getElementById("SearchStartDate").value = "";
        }            
    });

    $("#SearchEndDateButton").on("click", function () {
        debugger;
        if ($("#SearchEndDate").val()) {
            $("#SearchEndDate").addClass("search");
            grid.bootgrid("reload");
            $("#SearchEndDate").removeClass("search");
            document.getElementById("SearchEndDate").value = "";
        }
    });

    var baseApi = "/api/ToDoItems";
    var grid = $("#grid-data-api").bootgrid({
        labels: {
            noResults: "По вашему запросу ничего не найдено",
            search: "Поиск",
            infos: "Показано с {{ctx.start}} по {{ctx.end}} из {{ctx.total}} записей"
        },
        ajax: true,
        post: function () {
            debugger;
            if ($("#SearchStartDate").hasClass("search"))
                var startSearchDate = $("#SearchStartDate").val();
            if ($("#SearchEndDate").hasClass("search"))
                var endSearchDate = $("#SearchEndDate").val();
            return {              
                TimePeriod: document.getElementById("TimePeriod").innerHTML,
                Type: document.getElementById("Type").innerHTML,
                StartDateSearch: startSearchDate,
                EndDateSearch: endSearchDate
            };
        },
        url: baseApi,
        formatters: {
            "commands": function (column, row, data) {
                var hidden = row.isDone ? "hidden": "";
                return "<button type=\"button\" class=\"btn btn-xs btn-default command-edit\" data-row-id=\"" + row.id + "\">Изменить/удалить</button> " +
                    "<button type=\"button\" " + hidden +" class=\"btn btn-xs btn-default command-done\" data-row-id=\"" + row.id + "\">Выполнить</button>";
            }
        }
        }).on("loaded.rs.jquery.bootgrid", function (e) {
            grid.find(".command-edit").on("click", function (e) {
                window.location = "@Url.Action("Edit", "ToDo")/" + $(this).data("row-id");
            }).end().find(".command-done").on("click", function (e) {
                debugger;
                id = $(this).data("row-id");
                e.preventDefault();
                $.ajax({
                    type: "GET",
                    url: "/api/ToDoItems/"+id,
                    data: {
                        id: $(this).val()
                    },
                    success: function (result) {
                        grid.bootgrid("reload");
                    },
                    error: function (result) {
                        alert('error');
                    }
                });
            });
        });

    function PretifyButtons(buttonType) {
        var elements = document.getElementsByClassName("filter");
        for (i = 0; i < elements.length; i++) {
            if ((elements[i].classList.contains("active-button") && buttonType && elements[i].classList.contains(buttonType))
                || !buttonType && elements[i].classList.contains("active-button"))
                elements[i].classList.remove("active-button");
        }
    };

    function SetOrReset(buttonValue, buttonType, buttonId) {
        PretifyButtons(buttonType);
        if (buttonType == "TimePeriod") {
            if (document.getElementById("TimePeriod").innerHTML == buttonValue) {
                document.getElementById("TimePeriod").innerHTML = "4";
                $("#SearchFull").addClass("active-button");
            }
            else {
                $(buttonId).addClass("active-button");
                document.getElementById("TimePeriod").innerHTML = buttonValue;
            }
        }
        else {
            if (document.getElementById("Type").innerHTML == buttonValue) {
                $("#AllTypes").addClass("active-button");
                document.getElementById("Type").innerHTML = "4";
            }
            else {
                $(buttonId).addClass("active-button");
                document.getElementById("Type").innerHTML = buttonValue;
            }
        }
        grid.bootgrid("reload");
    }

    $("#SearchDay").on("click", function () {
        SetOrReset("1", "TimePeriod","#SearchDay");
    });

    $("#SearchWeek").on("click", function () {
        SetOrReset("2", "TimePeriod", "#SearchWeek");
    });

    $("#SearchMonth").on("click", function () {
        SetOrReset("3", "TimePeriod", "#SearchMonth");

    });

    $("#SearchFull").on("click", function () {
        SetOrReset("4", "TimePeriod", "#SearchFull");
    });

    $("#Meeting").on("click", function () {
        SetOrReset("1", "Type", "#Meeting");
    });
    $("#Business").on("click", function () {
        SetOrReset("2", "Type", "#Business");
    });
    $("#Memo").on("click", function () {
        SetOrReset("3", "Type", "#Memo");
    });
    $("#AllTypes").on("click", function () {
        SetOrReset("4", "Type", "#AllTypes");
    });

    $("#ResetFilters").on("click", function () {
        document.getElementById("Type").innerHTML = "4";
        document.getElementById("TimePeriod").innerHTML = "4";
        grid.bootgrid("reload");
        PretifyButtons();
    });

    $(document)
        .ajaxError(function (event, jqxhr, settings, thrownError) {
            if (jqxhr.status == 500) {
                alert("Произошла непредвиденная ошибка.");
            }
            else {
                if (jqxhr.responseText)
                    alert(jqxhr.responseText);
            }
        });
</script>
